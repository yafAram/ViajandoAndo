// <auto-generated />
using System;
using Microservice.MapsPointsUser.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace Microservice.MapsPointsUser.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251002162321_CreateSpatialIndexPois")]
    partial class CreateSpatialIndexPois
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microservice.MapsPointsUser.Api.Model.Poi", b =>
                {
                    b.Property<Guid>("PoiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BusinessId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("PoiId");

                    b.ToTable("Pois", (string)null);
                });

            modelBuilder.Entity("Microservice.MapsPointsUser.Api.Model.Route", b =>
                {
                    b.Property<Guid>("RouteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Polyline")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDistanceMeters")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<int>("TotalDurationSeconds")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RouteId");

                    b.ToTable("Routes", (string)null);
                });

            modelBuilder.Entity("Microservice.MapsPointsUser.Api.Model.Waypoint", b =>
                {
                    b.Property<Guid>("WaypointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ArrivalETA")
                        .HasColumnType("datetime2");

                    b.Property<Point>("Location")
                        .IsRequired()
                        .HasColumnType("geography");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<Guid?>("PoiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WaypointId");

                    b.HasIndex("PoiId");

                    b.HasIndex("RouteId", "Order")
                        .HasDatabaseName("IX_Waypoints_Route_Order");

                    b.ToTable("Waypoints", (string)null);
                });

            modelBuilder.Entity("Microservice.MapsPointsUser.Api.Model.Waypoint", b =>
                {
                    b.HasOne("Microservice.MapsPointsUser.Api.Model.Poi", "Poi")
                        .WithMany()
                        .HasForeignKey("PoiId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Microservice.MapsPointsUser.Api.Model.Route", "Route")
                        .WithMany("Waypoints")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Poi");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Microservice.MapsPointsUser.Api.Model.Route", b =>
                {
                    b.Navigation("Waypoints");
                });
#pragma warning restore 612, 618
        }
    }
}
